name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: -Dwarnings
  RUSTDOCFLAGS: -Dwarnings

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: apt update
      run: sudo apt update
    - name: apt install libsystemd-dev
      run: sudo apt install -y --no-install-recommends libsystemd-dev
    - name: Build
      run: cargo build --all-targets --all-features
    - name: Run tests
      run: cargo test --all-targets --all-features

  clippy-fixes:
    runs-on: ubuntu-latest
    outputs:
      commit-id: ${{ steps.commit-id.outputs.commit-id }}
    steps:
    - uses: actions/checkout@v2
    - name: apt update
      run: sudo apt update
    - name: apt install libsystemd-dev
      run: sudo apt install -y --no-install-recommends libsystemd-dev
    - name: Clippy fixes
      run: cargo clippy --all-targets --all-features --fix
    # Commit changes or do nothing
    - name: Commit changes
      run: |
        git commit -am "Applied fixes with clippy (${{ github.run_number }})" || :
    # Get the ID of the last commit. That will either be the commit that triggered
    # this workflow, or, if there were fixes applied, the commit just made to apply
    # those fixes.
    - name: Get commit ID
      id: commit-id
      run: echo ::set-output name=commit-id::$(git log --format="%H" -n 1)
    - name: Push changes
      run: git push origin HEAD:${{ github.ref }}

  clippy:
    runs-on: ubuntu-latest
    # Run clippy after any fixes were applied, in case some of the lints
    # aren't relevant anymore.
    needs: clippy-fixes
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ needs.clippy-fixes.outputs.commit-id }}
    - name: apt update
      run: sudo apt update
    - name: apt install libsystemd-dev
      run: sudo apt install -y --no-install-recommends libsystemd-dev
    - name: Clippy
      run: cargo clippy --all-targets --all-features

  fmt:
    runs-on: ubuntu-latest
    # This runs after clippy-fixes so that if any fixes were applied, they
    # can be formatted too.
    needs: clippy-fixes
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ needs.clippy-fixes.outputs.commit-id }}
    - name: Fmt
      run: cargo fmt
    # Commit changes or do nothing
    - name: Commit changes
      run: |
        git commit -am "Format code with rustfmt (${{ github.run_number }})" || :
    - name: Push changes
      run: git push origin HEAD:${{ github.ref }}

  msrv:
    name: msrv
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install MSRV
      uses: actions-rs/toolchain@v1
      with:
          toolchain: 1.57.0
          override: true

    - name: Run cargo check
      uses: actions-rs/cargo@v1
      with:
          command: check

    - name: Display MSRV
      run: cargo -V

  nix-flake:
    name: nix-flake
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2.4.0
    - uses: cachix/install-nix-action@v16
      with:
        nix_path: nixpkgs=channel:nixos-unstable
        extra_nix_config: |
          trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs=
          substituters = https://cache.nixos.org/ https://nix-community.cachix.org
    - run: nix flake check
    - run: nix build
